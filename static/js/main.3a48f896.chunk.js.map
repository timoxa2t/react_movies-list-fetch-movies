{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","FindMovie","addMovie","useState","query","setQuery","setMovie","isLoading","setIsLoading","error","setError","htmlFor","type","id","placeholder","value","onChange","event","target","classNames","onClick","preventDefault","fetch","then","res","json","catch","Response","Error","getMovie","movieDetails","Title","Plot","Poster","imdbID","getMovieFromMovieDetails","finally","disabled","trim","App","setMovies","useCallback","some","prevMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3a48f896.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import classNames from 'classnames';\nimport React, { useState } from 'react';\nimport { getMovie } from '../../api';\nimport { Movie } from '../../types/Movie';\nimport { MovieData } from '../../types/MovieData';\nimport { MovieCard } from '../MovieCard';\nimport './FindMovie.scss';\n\nfunction getMovieFromMovieDetails({\n  Title,\n  Plot,\n  Poster,\n  imdbID,\n}: MovieData): Movie {\n  return {\n    title: Title,\n    description: Plot,\n    imgUrl: Poster !== 'N/A'\n      ? Poster\n      : 'https://via.placeholder.com/360x270.png?text=no%20preview',\n    imdbUrl: `https://www.imdb.com/title/${imdbID}`,\n    imdbId: imdbID,\n  };\n}\n\ntype Props = {\n  addMovie: (movie: Movie) => void,\n};\n\nexport const FindMovie: React.FC<Props> = ({ addMovie }) => {\n  const [query, setQuery] = useState('');\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  const handleQueryChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value);\n    setError('');\n  };\n\n  const handleFindMovie = (event: React.FormEvent) => {\n    event.preventDefault();\n    setIsLoading(true);\n\n    getMovie(query)\n      .then(movieDetails => {\n        if ('Response' in movieDetails && movieDetails.Response === 'False') {\n          setError(\"Can't find a movie with such a title\");\n        } else {\n          setMovie(getMovieFromMovieDetails(movieDetails as MovieData));\n        }\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  };\n\n  const handleAddMovie = () => {\n    if (movie) {\n      addMovie(movie);\n      setQuery('');\n      setMovie(null);\n    }\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input is-dander\"\n              value={query}\n              onChange={handleQueryChange}\n            />\n          </div>\n\n          {error && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              {error}\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={classNames(\n                'button is-light',\n                { 'is-loading': isLoading },\n              )}\n              onClick={handleFindMovie}\n              disabled={!query.trim()}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            {movie && (\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={handleAddMovie}\n              >\n                Add to the list\n              </button>\n            )}\n          </div>\n        </div>\n      </form>\n      {movie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={movie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=80091c51';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import { useCallback, useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const addMovie = useCallback((movie: Movie) => {\n    if (movies.some(({ imdbId }) => imdbId === movie.imdbId)) {\n      return;\n    }\n\n    setMovies(prevMovies => [\n      ...prevMovies,\n      movie,\n    ]);\n  }, []);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie addMovie={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}